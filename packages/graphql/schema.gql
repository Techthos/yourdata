# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type InvoiceHeaderType {
  aa: String!
  correlatedInvoices: String
  currency: CurrencyCodeEnumType
  dispatchDate: DateTime
  dispatchTime: DateTime
  exchangeRate: Float
  fuelInvoice: Boolean
  invoiceType: InvoiceEnumType!
  invoiceVariationType: InvoiceVariationEnumType
  issueDate: DateTime!
  movePurpose: MovePurposeEnumType
  otherCorrelatedEntities: EntityEnumType
  selfPricing: Boolean
  series: String!
  specialInvoiceCategory: SpecialInvoiceCategoryEnumType
  vatPaymentSuspension: Boolean
  vehicleNumber: String
}

enum CurrencyCodeEnumType {
  USD
  CAD
  EUR
  AED
  AFN
  ALL
  AMD
  ARS
  AUD
  AZN
  BAM
  BDT
  BGN
  BHD
  BIF
  BND
  BOB
  BRL
  BWP
  BYN
  BZD
  CDF
  CHF
  CLP
  CNY
  COP
  CRC
  CVE
  CZK
  DJF
  DKK
  DOP
  DZD
  EEK
  EGP
  ERN
  ETB
  GBP
  GEL
  GHS
  GNF
  GTQ
  HKD
  HNL
  HRK
  HUF
  IDR
  ILS
  INR
  IQD
  IRR
  ISK
  JMD
  JOD
  JPY
  KES
  KHR
  KMF
  KRW
  KWD
  KZT
  LBP
  LKR
  LTL
  LVL
  LYD
  MAD
  MDL
  MGA
  MKD
  MMK
  MOP
  MUR
  MXN
  MYR
  MZN
  NAD
  NGN
  NIO
  NOK
  NPR
  NZD
  OMR
  PAB
  PEN
  PHP
  PKR
  PLN
  PYG
  QAR
  RON
  RSD
  RUB
  RWF
  SAR
  SDG
  SEK
  SGD
  SOS
  SYP
  THB
  TND
  TOP
  TRY
  TTD
  TWD
  TZS
  UAH
  UGX
  UYU
  UZS
  VEF
  VND
  XAF
  XOF
  YER
  ZAR
  ZMK
  ZWL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum InvoiceEnumType {
  InvoiceSales_1_1
  InvoiceSalesIntraCommunityDeliveries_1_2
  InvoiceSalesThirdCountryDeliveries_1_3
  InvoiceSalesThirdPartyAccount_1_4
  InvoiceSalesThirdPartySettlement_1_5
  InvoiceSalesSupplementaryDocument_1_6
  InvoiceSupply_2_1
  InvoiceSupplyIntraCommunityServices_2_2
  InvoiceSupplyThirdCountryServices_2_3
  InvoiceSupplySupplementaryDocument_2_4
  PropertyTitleNonObligatedIssuer_3_1
  PropertyTitleIssuerDenial_3_2
  CreditInvoiceRelated_5_1
  CreditInvoiceUnrelated_5_2
  SelfDeliveryItem_6_1
  SelfUseItem_6_2
  ContractIncome_7_1
  RentIncome_8_1
  SpecialItemResidenceTaxReceipt_8_2
  POSReceipt_8_4
  POSRefundReceipt_8_5
  CateringOrder_8_6
  NonRelatedMovementDocument_9_3
  ALP_11_1
  APY_11_2
  SimplifiedInvoice_11_3
  RetailCreditNote_11_4
  RetailSalesReceiptForThirdPartyAccount_11_5
  RetailPurchasesExpensesDomesticForeign_13_1
  RetailSalesProvisionDomesticForeign_13_2
  CommonExpenses_13_3
  Subscriptions_13_4
  EntityDocumentsSameIssuerDynamic_13_30
  RetailCreditNoteDomesticForeign_13_31
  InvoiceIntraCommunityAcquisitions_14_1
  InvoiceThirdCountryAcquisitions_14_2
  InvoiceIntraCommunityServicesReceipt_14_3
  InvoiceThirdCountryServicesReceipt_14_4
  EFKAAndOtherInsuranceOrganizations_14_5
  EntityDocumentsSameIssuerDynamic2_14_30
  DomesticForeignCredit_14_31
  ContractOutcome_15_1
  RentOutcome_16_1
  Salary_17_1
  Depreciation_17_2
  OtherIncomeAdjustmentEntriesAccountingBasis_17_3
  OtherIncomeAdjustmentEntriesTaxBasis_17_4
  OtherExpensesAdjustmentEntriesAccountingBasis_17_5
  OtherExpensesAdjustmentEntriesTaxBasis_17_6
}

enum InvoiceVariationEnumType {
  OmissionTransmissionByRecipient
  OmissionTransmissionByIssuer
  DeviationTransmissionByRecipient
  DeviationTransmissionByIssuer
}

enum MovePurposeEnumType {
  Sale
  SaleOnBehalfOfThirdParty
  Sampling
  Exhibition
  Return
  Storage
  ProcessingAssembly
  BetweenEntityFacilities
}

enum EntityEnumType {
  TaxRepresentative
  Intermediary
}

enum SpecialInvoiceCategoryEnumType {
  SubsidiesGrants
  HotelRetailIncomeRoomCharges
  AccountingEntry
  TaxFree
  ComplexDomesticForeignTransactions
  Article3BeneficiariesOfJointMinisterialDecision139818EX2022
  AgriculturalGoodsServicesPurchaseArticle41VATCode
  RetailRevenueAADE
  RetailRevenueAADE2
  RetailRevenueBusinessDeviation
}

type ExpensesClassificationType {
  id: Float
  amount: Float!
  classificationType: ExpensesClassificationEnumType
  classificationCategory: ExpensesClassificationCategoryEnumType
}

enum ExpensesClassificationEnumType {
  GoodsAtTheBeginningE3_101
  PurchasesOfGoodsForUseWholesaleE3_102_001
  PurchasesOfGoodsForUseRetailE3_102_002
  PurchasesOfGoodsForUseGoodsOfArticle39aE3_102_003
  PurchasesOfGoodsForUseExternalIntraCommunityE3_102_004
  PurchasesOfGoodsForUseExternalThirdCountriesE3_102_005
  PurchasesOfGoodsForUseOtherE3_102_006
  GoodsAtTheEndE3_104
  RawMaterialsAndProductionStartingMaterialsProductionE3_201
  PurchasesOfRawMaterialsWholesaleE3_202_001
  PurchasesOfRawMaterialsRetailE3_202_002
  PurchasesOfRawMaterialsExternalIntraCommunityE3_202_003
  PurchasesOfRawMaterialsExternalThirdCountriesE3_202_004
  PurchasesOfRawMaterialsOtherE3_202_005
  EndingInventoriesOfRawMaterialsE3_204
  ProductsAndWorkInProgressAtTheBeginningE3_207
  AdjustmentOfAnimalsPlantsAndGoodsE3_314
  SelfProductionOfFixedAssetsE3_106
  SelfProductionOfFixedAssets2E3_205
  SelfProductionOfFixedAssets3E3_305
  SelfProductionOfFixedAssets4E3_210
  SelfProductionOfFixedAssets5E3_310
  SelfProductionOfFixedAssets6E3_318
  PurchasesOfGoodsSubjectToExciseDutyE3_598_002
  LossesFromDisposalWithdrawalOfNonCurrentAssetsE3_584
  ManagementFeesE3_585_001
  ExpensesFromRelatedCompaniesE3_585_002
  ExpensesFromNonCooperatingCountriesE3_585_003
  ExpensesForInformativeConferencesE3_585_004
  ReceptionAndAccommodationExpensesE3_585_005
  TravelExpensesE3_585_006
  SocialSecurityContributionsE3_585_007
  ExpensesAndCommissionsForFarmersE3_585_008
  OtherFeesForDomesticServicesE3_585_009
  OtherFeesForForeignServicesE3_585_010
  EnergyE3_585_011
  WaterSupplyE3_585_012
  TelecommunicationsE3_585_013
  RentE3_585_014
  AdvertisingAndPromotionE3_585_015
  OtherExpensesE3_585_016
  MiscellaneousOperatingExpensesZ2E3_585_017
  InterestAndRelatedExpensesE3_586
  AmortizationE3_587
  UnusualExpensesAndLossesE3_588
  ProvisionsE3_589
  PurchasesOfTangibleFixedAssetsWholesaleE3_882_001
  PurchasesOfTangibleFixedAssetsRetailE3_882_002
  PurchasesOfTangibleFixedAssetsExternalIntraCommunityE3_882_003
  PurchasesOfTangibleFixedAssetsExternalThirdCountriesE3_882_004
  PurchasesOfIntangibleFixedAssetsWholesaleE3_883_001
  PurchasesOfIntangibleFixedAssetsRetailE3_883_002
  PurchasesOfIntangibleFixedAssetsExternalIntraCommunityE3_883_003
  PurchasesOfIntangibleFixedAssetsExternalThirdCountriesE3_883_004
  PurchasesAndExpensesWithinTheCountryVAT_361
  PurchasesAndImportsOfCapitalGoodsVAT_362
  OtherImportsExcludingCapitalGoodsVAT_363
  IntraCommunityAcquisitionsOfGoodsVAT_364
  IntraCommunityReceiptOfServicesVAT_365
  OtherRecipientTransactionsVAT_366
  AdjustmentOfGoodsE3_103
  AdjustmentOfRawMaterialsAndMaterialsE3_203
  AdjustmentOfRawMaterialsAndMaterials2E3_303
  AdjustmentOfProductsAndWorkInProgressE3_208
}

enum ExpensesClassificationCategoryEnumType {
  PurchasesOfGoodsCategory2_1
  PurchasesOfPrimarySecondaryMaterialsCategory2_2
  ReceiptOfServicesCategory2_3
  GeneralExpensesWithVATDeductionCategory2_4
  GeneralExpensesWithoutVATDeductionCategory2_5
  SalariesAndBenefitsCategory2_6
  FixedAssetsPurchasesCategory2_7
  FixedAssetsDepreciationCategory2_8
  ExpensesForThirdPartySettlementCategory2_9
  ExpensesOfPreviousPeriodsCategory2_10
  ExpensesOfSubsequentPeriodsCategory2_11
  OtherExpenseAdjustmentEntriesCategory2_12
  OpeningPeriodInventoriesCategory2_13
  ClosingPeriodInventoriesCategory2_14
  OtherInformationalExpenseDataCategory2_95
}

type IncomeClassificationType {
  id: Float
  amount: Float!
  classificationType: IncomeClassificationEnumType
  classificationCategory: IncomeClassificationCategoryEnumType!
}

enum IncomeClassificationEnumType {
  SelfProductionOfFixedAssetsDestructionOfGoodsE3_106
  SelfProductionOfFixedAssetsDestructionOfRawMaterialsE3_205
  SelfProductionOfFixedAssetsDestructionOfInProgressProductsE3_210
  SelfProductionOfFixedAssetsDestructionOfMaterialsE3_305
  SelfProductionOfFixedAssetsDestructionOfProductsInProgressE3_310
  SelfProductionOfFixedAssetsDestructionOfProductionExpensesE3_318
  WholesaleSalesOfGoodsAndServicesEntrepreneursE3_561_001
  WholesaleSalesGoodsServicesVATCodeE3_561_002
  RetailSalesGoodsServicesPrivateCustomersE3_561_003
  RetailSalesGoodsServicesVATCodeE3_561_004
  IntraCommunityExternalSalesE3_561_005
  ExternalSalesToThirdCountriesE3_561_006
  OtherSalesOfGoodsAndServicesE3_561_007
  OtherOrdinaryIncomeE3_562
  CreditStocksAndRelatedIncomeE3_563
  CreditForeignExchangeDifferencesE3_564
  RevenueFromParticipationsE3_565
  ProfitsFromDisposalOfNonCirculatingAssetsE3_566
  GainsFromReversalOfProvisionsE3_567
  GainsFromFairValueMeasurementE3_568
  UnusualIncomeAndProfitsE3_570
  ExpensesInSelfProductionE3_595
  SubsidiesAndGrantsE3_596
  SubsidiesGrantsForInvestmentE3_597
  WholesaleSalesOfFixedAssetsE3_880_001
  RetailSalesOfFixedAssetsE3_880_002
  IntraCommunityExternalSalesOfFixedAssetsE3_880_003
  ExternalSalesOfFixedAssetsToThirdCountriesE3_880_004
  WholesaleSalesOnBehalfOfThirdPartiesE3_881_001
  RetailSalesOnBehalfOfThirdPartiesE3_881_002
  IntraCommunityExternalSalesOnBehalfOfThirdPartiesE3_881_003
  ExternalSalesOnBehalfOfThirdPartiesToThirdCountriesE3_881_004
  SalesOfGoodsSubjectToExciseDutyE3_598_001
  SalesOnBehalfOfFarmersViaCooperativesE3_598_003
}

enum IncomeClassificationCategoryEnumType {
  RevenuesFromSaleOfGoodsCategory1_1
  RevenuesFromProductSalesCategory1_2
  RevenuesFromServicesCategory1_3
  RevenuesFromSaleOfFixedAssetsCategory1_4
  OtherRevenueAndProfitsCategory1_5
  SelfSupplyPersonalUseCategory1_6
  RevenueForThirdPartySettlementCategory1_7
  RevenueFromPreviousYearsCategory1_8
  RevenueFromSubsequentYearsCategory1_9
  OtherRevenueAdjustmentEntriesCategory1_10
  OtherInformativeRevenueElementsCategory1_95
  DistributionCategory3
}

type AddressType {
  city: String!
  number: String
  postalCode: String!
  street: String
}

type PartyType {
  address: AddressType
  branch: Float!
  country: CountryCodeEnumType!
  countryDocumentId: String
  documentIdNo: String
  name: String
  supplyAccountNo: String
  vatNumber: String!
}

enum CountryCodeEnumType {
  Afghanistan
  AlandIslands
  Albania
  Algeria
  AmericanSamoa
  Andorra
  Angola
  Anguilla
  Antarctica
  AntiguaAndBarbuda
  Argentina
  Armenia
  Aruba
  Australia
  Austria
  Azerbaijan
  Bahamas
  Bahrain
  Bangladesh
  Barbados
  Belarus
  Belgium
  Belize
  Benin
  Bermuda
  Bhutan
  Bolivia
  BonaireSintEustatiusSaba
  BosniaAndHerzegovina
  Botswana
  BouvetIsland
  Brazil
  BritishIndianOceanTerritory
  BruneiDarussalam
  Bulgaria
  BurkinaFaso
  Burundi
  Cambodia
  Cameroon
  Canada
  CapeVerde
  CaymanIslands
  CentralAfricanRepublic
  Chad
  Chile
  China
  ChristmasIsland
  CocosKeelingIslands
  Colombia
  Comoros
  Congo
  CongoDemocraticRepublic
  CookIslands
  CostaRica
  CoteDIvoire
  Croatia
  Cuba
  Curacao
  Cyprus
  CzechRepublic
  Denmark
  Djibouti
  Dominica
  DominicanRepublic
  Ecuador
  Egypt
  ElSalvador
  EquatorialGuinea
  Eritrea
  Estonia
  Ethiopia
  FalklandIslands
  FaroeIslands
  Fiji
  Finland
  France
  FrenchGuiana
  FrenchPolynesia
  FrenchSouthernTerritories
  Gabon
  Gambia
  Georgia
  Germany
  Ghana
  Gibraltar
  Greece
  Greenland
  Grenada
  Guadeloupe
  Guam
  Guatemala
  Guernsey
  Guinea
  GuineaBissau
  Guyana
  Haiti
  HeardIslandMcdonaldIslands
  HolySeeVaticanCityState
  Honduras
  HongKong
  Hungary
  Iceland
  India
  Indonesia
  Iran
  Iraq
  Ireland
  IsleOfMan
  Israel
  Italy
  Jamaica
  Japan
  Jersey
  Jordan
  Kazakhstan
  Kenya
  Kiribati
  Korea
  KoreaDemocraticPeoplesRepublic
  Kuwait
  Kyrgyzstan
  LaoPeoplesDemocraticRepublic
  Latvia
  Lebanon
  Lesotho
  Liberia
  LibyanArabJamahiriya
  Liechtenstein
  Lithuania
  Luxembourg
  Macao
  Macedonia
  Madagascar
  Malawi
  Malaysia
  Maldives
  Mali
  Malta
  MarshallIslands
  Martinique
  Mauritania
  Mauritius
  Mayotte
  Mexico
  Micronesia
  Moldova
  Monaco
  Mongolia
  Montenegro
  Montserrat
  Morocco
  Mozambique
  Myanmar
  Namibia
  Nauru
  Nepal
  Netherlands
  NewCaledonia
  NewZealand
  Nicaragua
  Niger
  Nigeria
  Niue
  NorfolkIsland
  NorthernMarianaIslands
  Norway
  Oman
  Pakistan
  Palau
  PalestinianTerritory
  Panama
  PapuaNewGuinea
  Paraguay
  Peru
  Philippines
  Pitcairn
  Poland
  Portugal
  PuertoRico
  Qatar
  Reunion
  Romania
  RussianFederation
  Rwanda
  SaintBarthelemy
  SaintHelena
  SaintKittsAndNevis
  SaintLucia
  SaintMartin
  SaintPierreAndMiquelon
  SaintVincentAndGrenadines
  Samoa
  SanMarino
  SaoTomeAndPrincipe
  SaudiArabia
  Senegal
  Serbia
  Seychelles
  SierraLeone
  Singapore
  SintMaarten
  Slovakia
  Slovenia
  SolomonIslands
  Somalia
  SouthAfrica
  SouthGeorgiaAndSandwichIsl
  SouthSudan
  Spain
  SriLanka
  Sudan
  Suriname
  SvalbardAndJanMayen
  Swaziland
  Sweden
  Switzerland
  SyrianArabRepublic
  Taiwan
  Tajikistan
  Tanzania
  Thailand
  TimorLeste
  Togo
  Tokelau
  Tonga
  TrinidadAndTobago
  Tunisia
  Turkey
  Turkmenistan
  TurksAndCaicosIslands
  Tuvalu
  Uganda
  Ukraine
  UnitedArabEmirates
  UnitedKingdom
  UnitedStates
  UnitedStatesOutlyingIslands
  Uruguay
  Uzbekistan
  Vanuatu
  Venezuela
  Vietnam
  VirginIslandsBritish
  VirginIslandsUS
  WallisAndFutuna
  WesternSahara
  Yemen
  Zambia
  Zimbabwe
}

type ShipType {
  applicationDate: DateTime!
  applicationId: String!
  doy: String
  shipID: String!
}

type InvoiceRowType {
  deductionsAmount: Float
  dienergia: ShipType
  discountOption: Boolean
  expense: ExpensesClassificationType
  feesAmount: Float
  feesPercentCategory: Float
  fuelCode: FuelCodeEnumType
  income: IncomeClassificationType
  invoiceDetailType: InvoiceDetailEnumType
  itemDescr: String
  lineComments: String
  lineNumber: Float
  measurementUnit: MeasurementUnitEnumType
  netValue: Float!
  otherTaxesAmount: Float
  otherTaxesPercentCategory: Float
  quantity15: Float
  quantity: Float
  recType: RecEnumType
  stampDutyAmount: String
  stampDutyPercentCategory: StampDutyPercentCategoryEnumType
  vatAmount: Float!
  vatCategory: VatCategoryEnumType!
  vatExemptionCategory: VatExemptionCategoryEnumType
  withheldAmount: Float
  withheldPercentCategory: String
}

enum FuelCodeEnumType {
  Benzine95RON
  Benzine95RONPlus
  Benzine100RON
  BenzineLRP
  AviationGasoline
  SpecialJetFuel
  Diesel
  DieselPremium
  DieselHeating
  DieselHeatingPremium
  DieselLight
  OtherUseDiesel
  MarineDiesel
  KeroseneJP1
  OtherUseKerosene
  Mazut
  MarineMazut
  LPG
  BulkIndustrialCommercialLPGAndMethane
  BulkHeatingAndOtherUsesLPGAndMethane
  BottledIndustrialCommercialLPGAndMethane
  BottledHeatingAndOtherUsesLPGAndMethane
  CNG
  AromaticHydrocarbonsClass2707
  CyclicHydrocarbonsClass2902
  LightOilWhiteSpirit
  LightOils
  Biodiesel
  OtherServiceCharges
}

enum InvoiceDetailEnumType {
  ThirdPartySalesClearing
  FeeFromThirdPartySales
}

enum MeasurementUnitEnumType {
  Pieces
  Kilograms
  Liters
}

enum RecEnumType {
  SpecialLineOfWithholdingTaxes
  FeeLineWithVAT
  OtherTaxesLineWithVAT
  SpecialStampDutyLine
  SpecialWithholdingLine
  GiftVoucher
  NegativeValueSign
}

enum StampDutyPercentCategoryEnumType {
  Coefficient_1_2_Percent
  Coefficient_2_4_Percent
  Coefficient_3_6_Percent
  OtherStampDutyCases
}

enum VatCategoryEnumType {
  Vat24Percent
  Vat13Percent
  Vat6Percent
  Vat17Percent
  Vat9Percent
  Vat4Percent
  VatExempt
  VatWithoutRegistration
  Vat396Percent
}

enum VatExemptionCategoryEnumType {
  WithoutvatArticle2and3
  WithoutvatArticle5
  WithoutvatArticle13
  WithoutvatArticle14
  WithoutvatArticle16
  WithoutvatArticle19
  WithoutvatArticle22
  WithoutvatArticle24
  WithoutvatArticle25
  WithoutvatArticle26
  WithoutvatArticle27
  WithoutvatArticle27Openseaships
  WithoutvatArticle271Openseaships
  WithoutvatArticle28
  WithoutvatArticle39
  PaWithoutvatArticle39a
  WithoutvatArticle40
  WithoutvatArticle41
  WithoutvatArticle47
  PaIncludedArticle43
  MaIncludedArticle44
  PaIncludedArticle45
  MaIncludedArticle46
  WithoutvatArticle6
  WithoutvatPol10291995
  WithoutvatPol11672015
  OtherVatExemptions
  WithoutvatArticle24Paragraph1Taxfree
  WithoutvatArticle47bOssNonunion
  WithoutvatArticle47gOssUnion
  WithoutvatArticle47dIoss
}

type PaymentMethod {
  amount: Float!
  paymentMethodInfo: String
  type: PaymentMethodEnumType!
}

enum PaymentMethodEnumType {
  DomesticBusinessPaymentAccount
  ForeignBusinessPaymentAccount
  Cash
  Check
  OnCredit
  WebBanking
  PosOrEPos
}

type InvoiceSummaryType {
  expenses: [ExpensesClassificationType!]
  incomes: [IncomeClassificationType!]
  totalDeductionsAmount: Float!
  totalFeesAmount: Float!
  totalGrossValue: Float!
  totalNetValue: Float!
  totalOtherTaxesAmount: Float!
  totalStampDutyAmount: Float!
  totalVatAmount: Float!
  totalWithheldAmount: Float!
}

type InvoiceType {
  authenticationCode: String
  cancelledByMark: Float
  counterpart: PartyType
  invoiceDetails: [InvoiceRowType!]
  invoiceHeader: InvoiceHeaderType!
  invoiceSummary: InvoiceSummaryType
  issuer: PartyType
  mark: Float
  otherTransportDetails: String
  paymentMethod: PaymentMethod!
  qrCodeUrl: String
  taxesTotals: String
  transmissionFailure: Float
  uid: String
}

type RequestedBookInfo {
  continuationToken: String
  counterVatNumber: String!
  count: Float!
  deductionsAmount: Float
  feesAmount: Float
  grossValue: Float
  invType: InvoiceEnumType!
  invoiceDetailType: InvoiceDetailEnumType
  issueDate: DateTime!
  maxMark: String
  minMark: String
  netValue: Float
  otherTaxesAmount: Float
  selfpricing: Boolean
  stampDutyAmount: Float
  thirdPartyAmount: Float
  vatAmount: Float
  withheldAmount: Float
}

type ErrorType {
  code: String!
  message: String!
}

type ResponseDocType {
  authenticationCode: String
  cancellationMark: Float
  classificationMark: Float
  errs: [ErrorType!]!
  index: Float
  invoiceMark: Float
  invoiceUid: String
  qrUrl: String
  statusCode: String
}

input InvoiceHeaderInput {
  aa: String!
  correlatedInvoices: String
  currency: CurrencyCodeEnumType
  dispatchDate: DateTime
  dispatchTime: DateTime
  exchangeRate: Float
  fuelInvoice: Boolean
  invoiceType: InvoiceEnumType!
  invoiceVariationType: InvoiceVariationEnumType
  issueDate: DateTime!
  movePurpose: MovePurposeEnumType
  otherCorrelatedEntities: EntityEnumType
  selfPricing: Boolean
  series: String!
  specialInvoiceCategory: SpecialInvoiceCategoryEnumType
  vatPaymentSuspension: Boolean
  vehicleNumber: String
}

input ExpensesClassificationInput {
  id: Float
  amount: Float!
  classificationType: ExpensesClassificationEnumType
  classificationCategory: ExpensesClassificationCategoryEnumType
}

input IncomeClassificationInput {
  id: Float
  amount: Float!
  classificationType: IncomeClassificationEnumType
  classificationCategory: IncomeClassificationCategoryEnumType!
}

input AddressInput {
  city: String!
  number: String
  postalCode: String!
  street: String
}

input PartyInput {
  address: AddressInput
  branch: Float!
  country: CountryCodeEnumType!
  countryDocumentId: String
  documentIdNo: String
  name: String
  supplyAccountNo: String
  vatNumber: String!
}

input ShipInput {
  applicationDate: DateTime!
  applicationId: String!
  doy: String
  shipID: String!
}

input InvoiceItemInput {
  deductionsAmount: Float
  dienergia: ShipInput
  discountOption: Boolean
  expense: ExpensesClassificationInput
  feesAmount: Float
  feesPercentCategory: Float
  fuelCode: FuelCodeEnumType
  income: IncomeClassificationInput
  invoiceDetailType: InvoiceDetailEnumType
  itemDescr: String
  lineComments: String
  lineNumber: Float
  measurementUnit: MeasurementUnitEnumType
  netValue: Float!
  otherTaxesAmount: Float
  otherTaxesPercentCategory: Float
  quantity15: Float
  quantity: Float
  recType: RecEnumType
  stampDutyAmount: String
  stampDutyPercentCategory: StampDutyPercentCategoryEnumType
  vatAmount: Float!
  vatCategory: VatCategoryEnumType!
  vatExemptionCategory: VatExemptionCategoryEnumType
  withheldAmount: Float
  withheldPercentCategory: String
}

input PaymentMethodInput {
  amount: Float!
  paymentMethodInfo: String
  type: PaymentMethodEnumType!
}

input InvoiceSummaryInput {
  expenses: [ExpensesClassificationInput!]
  incomes: [IncomeClassificationInput!]
  totalDeductionsAmount: Float!
  totalFeesAmount: Float!
  totalGrossValue: Float!
  totalNetValue: Float!
  totalOtherTaxesAmount: Float!
  totalStampDutyAmount: Float!
  totalVatAmount: Float!
  totalWithheldAmount: Float!
}

input InvoiceInput {
  authenticationCode: String
  cancelledByMark: Float
  counterpart: PartyInput
  invoiceDetails: [InvoiceItemInput!]
  invoiceHeader: InvoiceHeaderInput!
  invoiceSummary: InvoiceSummaryInput
  issuer: PartyInput
  mark: Float
  otherTransportDetails: String
  paymentMethod: PaymentMethodInput!
  qrCodeUrl: String
  taxesTotals: String
  transmissionFailure: Float
  uid: String
}

type Query {
  expenses(input: RequestBookInfoInput!): [RequestedBookInfo!]!
  income(input: RequestBookInfoInput!): [RequestedBookInfo!]!
}

input RequestBookInfoInput {
  dateFrom: DateTime!
  dateTo: DateTime!
  counterVatNumber: String
  entityVatNumber: String
  invType: InvoiceEnumType
  nextPartitionKey: String
  nextRowKey: String
}

type Mutation {
  sendInvoice(input: InvoiceInput!): ResponseDocType!
}