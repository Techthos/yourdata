# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type InvoiceHeaderType {
  aa: String!
  correlatedInvoices: String
  currency: String
  dispatchDate: DateTime
  dispatchTime: DateTime
  exchangeRate: Float
  fuelInvoice: Boolean
  invoiceType: String!
  invoiceVariationType: Float
  issueDate: DateTime!
  movePurpose: Float
  otherCorrelatedEntities: Float
  selfPricing: Boolean
  series: String!
  specialInvoiceCategory: Float
  vatPaymentSuspension: Boolean
  vehicleNumber: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ExpensesClassificationType {
  id: Float
  amount: Float!
  classificationType: String
  classificationCategory: String
}

type IncomeClassificationType {
  id: Float
  amount: Float!
  classificationType: String
  classificationCategory: String!
}

type AddressType {
  city: String!
  number: String
  postalCode: String!
  street: String
}

type PartyType {
  address: AddressType
  branch: Float!
  country: String!
  countryDocumentId: String
  documentIdNo: String
  name: String
  supplyAccountNo: String
  vatNumber: String!
}

type ShipType {
  applicationDate: DateTime!
  applicationId: String!
  doy: String
  shipID: String!
}

type InvoiceRowType {
  deductionsAmount: Float
  dienergia: ShipType
  discountOption: Boolean
  expense: ExpensesClassificationType
  feesAmount: Float
  feesPercentCategory: Float
  fuelCode: Float
  income: IncomeClassificationType
  invoiceDetailType: Float
  itemDescr: String
  lineComments: String
  lineNumber: Float
  measurementUnit: Float
  netValue: Float!
  otherTaxesAmount: Float
  otherTaxesPercentCategory: Float
  quantity15: Float
  quantity: Float
  recType: Float
  stampDutyAmount: String
  stampDutyPercentCategory: Float
  vatAmount: Float!
  vatCategory: Float!
  vatExemptionCategory: Float
  withheldAmount: Float
  withheldPercentCategory: String
}

type PaymentMethod {
  amount: Float!
  paymentMethodInfo: String
  type: Float!
}

type InvoiceSummaryType {
  expenses: [ExpensesClassificationType!]
  incomes: [IncomeClassificationType!]
  totalDeductionsAmount: Float!
  totalFeesAmount: Float!
  totalGrossValue: Float!
  totalNetValue: Float!
  totalOtherTaxesAmount: Float!
  totalStampDutyAmount: Float!
  totalVatAmount: Float!
  totalWithheldAmount: Float!
}

type InvoiceType {
  authenticationCode: String
  cancelledByMark: Float
  counterpart: PartyType
  invoiceDetails: [InvoiceRowType!]
  invoiceHeader: InvoiceHeaderType!
  invoiceSummary: InvoiceSummaryType
  issuer: PartyType
  mark: Float
  otherTransportDetails: String
  paymentMethod: PaymentMethod!
  qrCodeUrl: String
  taxesTotals: String
  transmissionFailure: Float
  uid: String
}

type RequestedBookInfo {
  continuationToken: String
  counterVatNumber: String!
  count: Float!
  deductionsAmount: Float
  feesAmount: Float
  grossValue: Float
  invType: InvoiceEnumType!
  invoiceDetailType: InvoiceDetailEnumType
  issueDate: DateTime!
  maxMark: String
  minMark: String
  netValue: Float
  otherTaxesAmount: Float
  selfpricing: Boolean
  stampDutyAmount: Float
  thirdPartyAmount: Float
  vatAmount: Float
  withheldAmount: Float
}

enum InvoiceEnumType {
  InvoiceSales_1_1
  InvoiceSalesIntraCommunityDeliveries_1_2
  InvoiceSalesThirdCountryDeliveries_1_3
  InvoiceSalesThirdPartyAccount_1_4
  InvoiceSalesThirdPartySettlement_1_5
  InvoiceSalesSupplementaryDocument_1_6
  InvoiceSupply_2_1
  InvoiceSupplyIntraCommunityServices_2_2
  InvoiceSupplyThirdCountryServices_2_3
  InvoiceSupplySupplementaryDocument_2_4
  PropertyTitleNonObligatedIssuer_3_1
  PropertyTitleIssuerDenial_3_2
  CreditInvoiceRelated_5_1
  CreditInvoiceUnrelated_5_2
  SelfDeliveryItem_6_1
  SelfUseItem_6_2
  ContractIncome_7_1
  RentIncome_8_1
  SpecialItemResidenceTaxReceipt_8_2
  POSReceipt_8_4
  POSRefundReceipt_8_5
  CateringOrder_8_6
  NonRelatedMovementDocument_9_3
  ALP_11_1
  APY_11_2
  SimplifiedInvoice_11_3
  RetailCreditNote_11_4
  RetailSalesReceiptForThirdPartyAccount_11_5
  RetailPurchasesExpensesDomesticForeign_13_1
  RetailSalesProvisionDomesticForeign_13_2
  CommonExpenses_13_3
  Subscriptions_13_4
  EntityDocumentsSameIssuerDynamic_13_30
  RetailCreditNoteDomesticForeign_13_31
  InvoiceIntraCommunityAcquisitions_14_1
  InvoiceThirdCountryAcquisitions_14_2
  InvoiceIntraCommunityServicesReceipt_14_3
  InvoiceThirdCountryServicesReceipt_14_4
  EFKAAndOtherInsuranceOrganizations_14_5
  EntityDocumentsSameIssuerDynamic2_14_30
  DomesticForeignCredit_14_31
  ContractOutcome_15_1
  RentOutcome_16_1
  Salary_17_1
  Depreciation_17_2
  OtherIncomeAdjustmentEntriesAccountingBasis_17_3
  OtherIncomeAdjustmentEntriesTaxBasis_17_4
  OtherExpensesAdjustmentEntriesAccountingBasis_17_5
  OtherExpensesAdjustmentEntriesTaxBasis_17_6
}

enum InvoiceDetailEnumType {
  ThirdPartySalesClearing
  FeeFromThirdPartySales
}

type Query {
  expenses(input: RequestBookInfoInput!): [RequestedBookInfo!]!
  income(input: RequestBookInfoInput!): [RequestedBookInfo!]!
}

input RequestBookInfoInput {
  dateFrom: DateTime!
  dateTo: DateTime!
  counterVatNumber: String
  entityVatNumber: String
  invType: InvoiceEnumType
  nextPartitionKey: String
  nextRowKey: String
}